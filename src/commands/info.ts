import {client, CommandFile} from '../bot'
import {Message, MessageEmbed, GuildMember} from 'discord.js'
import {get, print, strftime} from '../py'
import {data} from '../events/firebase'
import * as fs from 'fs'

const localTranslate = {
    'brazil': '–ë—Ä–∞–∑–∏–ª–∏—è',
    'europe': '–ï–≤—Ä–æ–ø–∞',
    'hongkong': '–ì–æ–Ω–∫–æ–Ω–≥',
    'india': '–ò–Ω–¥–∏—è',
    'japan': '–Ø–ø–æ–Ω–∏—è',
    'russia': '–†–æ—Å—Å–∏—è',
    'singapore': '–°–∏–Ω–≥–∞–ø—É—Ä',
    'southafrica': '–Æ–∂–Ω–∞—è –ê—Ñ—Ä–∏–∫–∞',
    'sydney': '–°–∏–¥–Ω–µ–π',
    'us-central': '–°–®–ê –¶–µ–Ω—Ç—Ä',
    'us-east': '–°–®–ê –í–æ—Å—Ç–æ–∫',
    'us-south': '–°–®–ê –Æ–≥',
    'us-west': '–°–®–ê –ó–∞–ø–∞–¥',
    'MENTIONS': '–£–ø–æ–º–∏–Ω–∞–Ω–∏—è',
    'ALL': '–í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è',
    'ANIMATED_ICON': '–ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–≤–∞—Ç–∞—Ä',
    'BANNER': '–ë–∞–Ω–Ω–µ—Ä',
    'COMMERCE': '–ö–æ–º–º–µ—Ä—Ü–∏—è',
    'DISCOVERABLE': '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è',
    'INVITE_SPLASH': '–§–æ–Ω –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π',
    'NEWS': '–ö–∞–Ω–∞–ª –Ω–æ–≤–æ—Å—Ç–µ–π',
    'PARTNERED': '–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–µ –ø–∞—Ä—Ç–Ω—ë—Ä—Å—Ç–≤–æ',
    'VANITY_URL': '–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π URL',
    'VERIFIED': '–ì–∏–ª—å–¥–∏—è –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–∞',
    'VIP_REGIONS': 'VIP —Ä–µ–≥–∏–æ–Ω',
    'WELCOME_SCREEN_ENABLED': '–≠–∫—Ä–∞–Ω –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è',
    'COMMUNITY': '–ö–æ–º—å—é–Ω–∏—Ç–∏',
    'online': '–æ–Ω–ª–∞–π–Ω',
    'idle': '–æ—Ç–æ—à—ë–ª',
    'dnd': '–Ω–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å',
    'offline': '–æ—Ñ—Ñ–ª–∞–π–Ω',
    '???': '???',
    'LISTENING': '–°–ª—É—à–∞–µ—Ç',
    'PLAYING': '–ò–≥—Ä–∞–µ—Ç –≤',
    'STREAMING': '–°—Ç—Ä–∏–º–∏—Ç',
    'WATCHING': '–°–º–æ—Ç—Ä–∏—Ç'
}

const commands: CommandFile[] = [
    {
        names: ['help', '?'],
        run: async (message: Message) => {
            let filePaths = []
            let fileSize = 0
            for (const obj of await fs.promises.readdir(`./src`)) {
                if (obj.endsWith('.ts')) {
                    filePaths.push(`./src/${obj}`)
                } else {
                    for (const oobj of await fs.promises.readdir(`./src/${obj}`)) {
                        filePaths.push(`./src/${obj}/${oobj}`)
                    }
                }
            }
            for (const file of filePaths) {
                fileSize += (await fs.promises.stat(file)).size
            }

            const msg = new MessageEmbed()
                .setThumbnail(client.user.avatarURL({format: 'png', size: 512}))
                .setDescription(
                    '–í—Å–µ –∫–æ–º–∞–Ω–¥—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω—ã –Ω–∞ [—Å–∞–π—Ç–µ](https://rikzun.github.io/jill.html)\n' +
                    `–°–æ–∑–¥–∞—Ç–µ–ª—å –±–æ—Ç–∞ <@${client.owner}>\n` + 
                    '```\n' +
                    `–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–æ–≤: ${(fileSize / 1000).toFixed(1)}–ö–ë\n` +
                    `–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤: ${filePaths.length}\n` +
                    `–í–µ—Ä—Å–∏—è: ${client.version}` +
                    '```'
                )
                .setFooter('–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –≤–µ–¥—ë—Ç—Å—è —Å 02.06.2020')
            message.channel.send(msg)
        }
    },
    {
        names: ['bump'],
        run: async (message: Message) => {
            if (!get(data.bumptimer, message.guild.id, false)) {
                message.channel.send('–í—ã –Ω–µ –≤–∫–ª—é—á–∏–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ bump')
                return
            }
            let bumptime = ''
            if (get(data.bumptimer[message.guild.id], 'sdc')) {
                bumptime += strftime('–î–æ `s.up` –æ—Å—Ç–∞–ª–æ—Å—å %H:%M:%S\n', Date.now() - Number(data.bumptimer[message.guild.id].sdc))
            }
            if (get(data.bumptimer[message.guild.id], 'smon')) {
                bumptime += strftime('–î–æ `!bump` –æ—Å—Ç–∞–ª–æ—Å—å %H:%M:%S', Date.now() - Number(data.bumptimer[message.guild.id].smon))
            }
            if (bumptime.length == 0) {
                bumptime = '–ø—É—Å—Ç–æ'
            };

            const Embed = new MessageEmbed()
                .setDescription(bumptime)
            message.channel.send(Embed)
        }
    },
    {
        names: ['user'],
        args: {'member*': 'GuildMember'},
        run: async (message: Message, member: GuildMember) => {
            if (typeof member == 'undefined') {
                member = message.member
            } else if (member == null) {
                message.channel.send('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.')
                return
            }

            let avatar: string
            if (member.user.avatar == null) {
                avatar = member.user.defaultAvatarURL
            } else if (member.user.avatar.startsWith('a_')) {
                avatar = member.user.avatarURL({format: 'gif', size: 1024})
            } else {
                avatar = member.user.avatarURL({format: 'png', size: 1024})
            }
            
            const joinedAt = strftime('%d.%m.%y %H:%M:%S', member.joinedTimestamp),
                regAt = strftime('%d.%m.%y %H:%M:%S', member.user.createdTimestamp),
                presences = member.guild.presences.cache.get(member.id),
                clientStatus = get(presences, 'clientStatus')

            let customStatus = '',
                activities = ''

            if (presences) {
                presences.activities.forEach(e => {
                    if (e.type == 'CUSTOM_STATUS') {
                        customStatus = e.state
                        return
                    }
                    activities += `${localTranslate[e.type]} ${e.name}\n`
                })
            }

            const Embed = new MessageEmbed()
                .setThumbnail(avatar)
                .addFields(
                    {
                        name: '–û–±—â–µ–µ',
                        value:
                        '```\n' +
                        `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${member.user.tag}\n` +
                        `–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: ${regAt}\n` +
                        `–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: ${joinedAt}\n` +
                        `ID: ${member.id}\n` +
                        '```'
                    }
                )
            if (clientStatus) {
                Embed.addField(
                    '–ü–ª–∞—Ç—Ñ–æ—Ä–º—ã',
                    '```\n' +
                    `–ö–æ–º–ø—å—é—Ç–µ—Ä: ${localTranslate[clientStatus.desktop ?? '???']}\n` +
                    `–í–µ–±: ${localTranslate[clientStatus.web ?? '???']}\n` +
                    `–°–º–∞—Ä—Ç—Ñ–æ–Ω: ${localTranslate[clientStatus.mobile ?? '???']}\n` +
                    '```'
                )
            }
            if (customStatus) Embed.addField('–ö–∞—Å—Ç–æ–º–Ω—ã–π —Å—Ç–∞—Ç—É—Å', `\`\`\`\n${customStatus}\`\`\``)
            if (activities) Embed.addField('–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å', `\`\`\`\n${activities}\`\`\``)
                
            message.channel.send(Embed)
        }
    },
    {
        names: ['guild'],
        guild: true,
        run: async (message: Message) => {
            const guild = message.guild
            const guildMemberCount = guild.memberCount - guild.members.cache.filter(m => m.user.bot).size
            let bans: string

            if (guild.me.hasPermission('BAN_MEMBERS')) {
                bans = String((await guild.fetchBans()).size)
            } else {
                bans = '???'
            }

            let guildFeatures = guild.features.slice()
            guildFeatures.forEach((e, i, a) => {
                guildFeatures[i] = localTranslate[e]
            })

            let avatar: string
            if (guild.icon == null) {
                avatar = guild.icon
            } else if (guild.icon.startsWith('a_')) {
                avatar = guild.iconURL({format: 'gif', size: 1024})
            } else {
                avatar = guild.iconURL({format: 'png', size: 1024})
            }

            const Embed = new MessageEmbed()
                .setTitle(`–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ ${guild.name}`)
                .setThumbnail(avatar)
                .addFields(
                    {
                        name: '–û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', 
                        value: 
                        '```' +
                        `–°–æ–∑–¥–∞—Ç–µ–ª—å: ${guild.owner.user.username}\n` +
                        `–°–æ–∑–¥–∞–Ω: ${strftime('%d.%m.%y %H:%M:%S', guild.createdTimestamp)}\n` +
                        `–†–µ–≥–∏–æ–Ω: ${localTranslate[guild.region]}\n` +
                        `–ë–∞–Ω—ã: ${bans}\n` +
                        `–≠–º–æ–¥–∑–∏: ${guild.emojis.cache.size}\n` +
                        `–ê–§–ö: ${get(guild.afkChannel, 'name', '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')}\n` +
                        `–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: ${localTranslate[guild.defaultMessageNotifications]}` +
                        '```',
                        inline: true
                    },
                    {
                        name: '–û–±—ä–µ–∫—Ç—ã', 
                        value:
                        '```' +
                        `–ö–∞–Ω–∞–ª–æ–≤: ${guild.channels.cache.size}\n` +
                        `–¢–µ–∫—Å—Ç–æ–≤—ã—Ö: ${guild.channels.cache.filter(ch => ch.type == 'text').size}\n` +
                        `–ì–æ–ª–æ—Å–æ–≤—ã—Ö: ${guild.channels.cache.filter(ch => ch.type == 'voice').size}\n` +
                        `–ö–∞—Ç–µ–≥–æ—Ä–∏–π: ${guild.channels.cache.filter(ch => ch.type == 'category').size}\n` +
                        `–†–æ–ª–µ–π: ${guild.roles.cache.size}` +
                        '```',
                        inline: true
                    },
                    {
                        name: '–£—á–∞—Å—Ç–Ω–∏–∫–∏', 
                        value:
                        '```' +
                        `üîò –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${guildMemberCount}\n` +
                        `‚ö™ –û–Ω–ª–∞–π–Ω: ${guild.presences.cache.filter(m => m.status !== 'offline' && !m.user.bot).size}\n` +
                        `‚ö´ –û—Ñ—Ñ–ª–∞–π–Ω: ${guildMemberCount - guild.presences.cache.filter(m => m.status !== 'offline' && !m.user.bot).size}\n` +
                        `üü¢ –í —Å–µ—Ç–∏: ${guild.presences.cache.filter(m => m.status == 'online' && !m.user.bot).size}\n` +
                        `üü† –ù–µ –∞–∫—Ç–∏–≤–µ–Ω: ${guild.presences.cache.filter(m => m.status == 'idle' && !m.user.bot).size}\n` +
                        `üî¥ –ù–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å: ${guild.presences.cache.filter(m => m.status == 'dnd' && !m.user.bot).size}\n` +
                        `üîµ –ë–æ—Ç—ã: ${guild.members.cache.filter(m => m.user.bot).size}` +
                        '```'
                    }
                )
                if (guildFeatures.length > 0) {
                    Embed.addField('–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏', '```' + guildFeatures.join(', ') + '```')}

            message.channel.send(Embed)
        }
    }
]
export default commands